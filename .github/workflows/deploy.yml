name: Deploy layer
on:
  push:
    paths:
      - "node-layer/**"
      - "python-layer/**"
      - "serverless.yml"
      - ".github/workflows/deploy-layer.yml"
    branches: [development, production]

env:
  BUCKET_NAME_DEV:  siatech-layer-artifacts-dev
  BUCKET_NAME_PROD: siatech-layer-artifacts-prod
  REGION: us-east-2

jobs:
  deploy-layer:
    runs-on: ubuntu-latest
    defaults: { run: { shell: bash } }

    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with: { node-version: 18 }

    # ▸ Serverless CLI
    - run: npm install -g serverless@3

    # ▸ Plugins (por si los usas)
    - run: npm install -g serverless-bundle@^6 serverless-python-requirements@^6

    # ▸ Stage / credenciales
    - id: env
      run: |
        if [[ "$GITHUB_REF" == "refs/heads/development" ]]; then
          echo "STAGE=dev" >> $GITHUB_ENV
          echo "BUCKET=$BUCKET_NAME_DEV" >> $GITHUB_ENV
          echo "aws_key=${{ secrets.AWS_ACCESS_KEY_ID_SANDBOX }}"        >> $GITHUB_ENV
          echo "aws_secret=${{ secrets.AWS_SECRET_ACCESS_KEY_SANDBOX }}" >> $GITHUB_ENV
        else
          echo "STAGE=prod" >> $GITHUB_ENV
          echo "BUCKET=$BUCKET_NAME_PROD" >> $GITHUB_ENV
          echo "aws_key=${{ secrets.AWS_ACCESS_KEY_ID }}"                >> $GITHUB_ENV
          echo "aws_secret=${{ secrets.AWS_SECRET_ACCESS_KEY }}"         >> $GITHUB_ENV
        fi

    - uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id:     ${{ env.aws_key }}
        aws-secret-access-key: ${{ env.aws_secret }}
        aws-region: ${{ env.REGION }}

    # ▸ Crear bucket si no existe (idempotente)
    - name: Ensure deployment bucket exists
      run: |
        if aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
          echo "Bucket $BUCKET ya existe."
        else
          echo "Creando bucket $BUCKET ..."
          aws s3api create-bucket --bucket "$BUCKET" --region $REGION --create-bucket-configuration LocationConstraint=$REGION
          aws s3api put-bucket-encryption --bucket "$BUCKET" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
        fi

    # ▸ Deploy
    - run: |
        serverless deploy --stage $STAGE --region $REGION --verbose
